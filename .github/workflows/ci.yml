name: ci

on:
  workflow_dispatch:
  pull_request:
  release:
    types: [published]
  push:
    branches:
      - main
      - dev

jobs:
  build-test:
    if: ${{ !contains(github.event.head_commit.message, '[skip ci]') }}
    runs-on: ${{matrix.platform.os}}
    container:
      image:  ${{ matrix.platform.name == 'Linux' && 'ghcr.io/monamimani-builds/cpp-devcontainer' || '' }}
    strategy:
      fail-fast: false

      # CMake preset name template: "%Platform%-%Compiler%-%Generator%-%BuildType%-%BuildKind%"
      matrix:
        platform: [
          {name: Linux, os: ubuntu-latest},
          {name: Windows, os: windows-latest }
          ]
        compiler: [ Gcc, Clang, Clang-cl, Msvc]
        generator: [Ninja]
        build_type: [Debug, Release]
        build_kind: [Dev, QA, Profile, Shipping]

        exclude: #Becasue they don't make sense or no Cmake preset created.
          - platform: {name: Linux}
            compiler: Msvc
          - platform: {name: Windows}
            compiler: Clang
          - build_kind: QA
            build_type: Debug
          - build_kind: Shipping
            build_type: Debug
          - build_kind: Profile
          - compiler: Gcc
          - compiler: Clang-cl
          
        include: # combinasions that are one off
          - platform: {name: Linux, os: ubuntu-latest}
            compiler: Clang
            generator: NinjaMultiConfig
            build_type: Debug
            build_kind: Dev
          - platform: {name: Windows, os: windows-latest }
            compiler: Msvc
            generator: Vs2022
            build_type: Debug
            build_kind: Dev
        
    
    name: ${{matrix.platform.name}}-${{matrix.compiler}}-${{matrix.generator}}-${{matrix.build_type}}-${{matrix.build_kind}}

    env:
      CMAKE_PRESET: ${{matrix.platform.name}}-${{matrix.compiler}}-${{matrix.generator}}-${{matrix.build_type}}-${{matrix.build_kind}}

    steps:
    - uses: actions/checkout@v4

    - name: Terminal echo
      shell: bash
      run: | 

        echo "VCPKG_ROOT=$VCPKG_INSTALLATION_ROOT" >> $GITHUB_ENV

        echo "cmake preset ${{env.CMAKE_PRESET}}"
        echo "${{matrix.platform.name}}"
        echo "${{matrix.platform.os}}"
        echo "${{matrix.compiler}}"
        echo "${{matrix.generator}}"
        echo "${{matrix.build_type}}"
        echo "${{matrix.build_kind}}"

    - name: Update vcpkg
      shell: bash
      run: |
        pushd "${{env.VCPKG_ROOT}}"
        git config --list
        #git pull --ff-only
        git rev-parse HEAD
        popd

    # - name: Set ownership
    #   shell: bash
    #   run: |
    #     # this is to fix GIT not liking owner of the checkout dir
    #     chown -R $(id -u):$(id -g) $PWD
    #     #git config --global --add safe.directory "$GITHUB_WORKSPACE"
    
    # - name: Update VCPKG
    #   if: runner.os == 'Linux'
    #   shell: bash
    #   run: |
    #     pushd "${{env.VCPKG_INSTALLATION_ROOT}}"
    #     chown -R $(id -u):$(id -g) $PWD
    #     # git config --global --add safe.directory "$GITHUB_WORKSPACE"
    #     git pull --ff-only
    #     popd

    - name: Vcpkg Cache
      uses: ./.github/actions/vcpkg_cache

    - name: Setup Cache
      uses: ./.github/actions/setup_cache
      with:
        compiler: ${{ matrix.compiler }}
        build_type: ${{ matrix.build_type }}
        packaging_maintainer_mode: false
        generator: ${{ matrix.generator }}


    - name: CMake Configure
      shell: pwsh
      run: |

        if(${{runner.os == 'Windows' && '$true' || '$false'}})
        {
          & { . Scripts\Build\VsEnvironment.ps1; LaunchVsDevShell }
        }

        cmake --preset ${{env.CMAKE_PRESET}} -DGIT_SHA:STRING=${{ github.sha }}

    - name: CMake Build
      run: |
        cmake --build --preset ${{env.CMAKE_PRESET}}

    # - name: Tests
    #   run: |
    #     cmake --build --preset $CMAKE_PRESET
